{
  "contractName": "Factory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pairAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0xd78275c325a16fa757088939b601528e22621448acbf8a196e11a61e61540288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a584bca59832efa837892b848e85a5febf0392e61565be44bb6993f67b77f4\",\"dweb:/ipfs/QmPYgHo3h88dLbK5FWUvDsux5QpyMMg2s4eRJexeuwbTK2\"]},\"project:/contracts/Pair.sol\":{\"keccak256\":\"0x74ba9041e4bda8e63207d0528462c222d467aee894c3f90602a28e8eaa8cb635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d25a3c9dcd2ef688ee994088d72e217ae03e310face7dfb356912738a5031fda\",\"dweb:/ipfs/QmU3y8XUPndryAUvoCa8xoEGdwm1QcYYBip5KDV7YkoxEG\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5264:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:11",
                "type": ""
              }
            ],
            "src": "334:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:11",
                "type": ""
              }
            ],
            "src": "466:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:11",
                "type": ""
              }
            ],
            "src": "568:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:11",
                "type": ""
              }
            ],
            "src": "696:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "924:391:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "972:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "945:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "954:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "941:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "941:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "937:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "937:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "934:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1063:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1078:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1092:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1082:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1107:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1142:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1153:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1138:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1138:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1162:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1117:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1107:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1190:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1205:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1219:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1209:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1235:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1270:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1281:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1266:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1266:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1290:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1245:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1235:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "886:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "897:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "909:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "917:6:11",
                "type": ""
              }
            ],
            "src": "841:474:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1403:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1426:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1408:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1408:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1396:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1396:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1374:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1381:3:11",
                "type": ""
              }
            ],
            "src": "1321:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1553:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1633:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1646:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1657:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1642:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1642:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1589:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1515:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1538:4:11",
                "type": ""
              }
            ],
            "src": "1445:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1786:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1791:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1807:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1826:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1831:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1822:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1822:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1807:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1741:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1746:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1757:11:11",
                "type": ""
              }
            ],
            "src": "1673:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1954:119:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1976:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1984:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1972:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1972:14:11"
                      },
                      {
                        "hexValue": "546f6b656e732073686f756c64206861766520646966666572656e7420616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1988:34:11",
                        "type": "",
                        "value": "Tokens should have different add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1965:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1965:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2044:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2052:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2040:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2040:15:11"
                      },
                      {
                        "hexValue": "726573736573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2057:8:11",
                        "type": "",
                        "value": "resses"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2033:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:33:11"
                }
              ]
            },
            "name": "store_literal_in_memory_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1946:6:11",
                "type": ""
              }
            ],
            "src": "1848:225:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2225:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2235:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2301:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2242:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2235:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2407:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6",
                      "nodeType": "YulIdentifier",
                      "src": "2318:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2318:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2420:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2431:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2436:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2427:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2420:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2213:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2221:3:11",
                "type": ""
              }
            ],
            "src": "2079:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2622:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2632:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2644:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2655:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2640:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2640:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2632:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2679:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2690:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2675:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2698:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2704:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2694:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2668:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2668:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2858:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2732:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2724:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2602:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2617:4:11",
                "type": ""
              }
            ],
            "src": "2451:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2982:118:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3004:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3012:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3000:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:14:11"
                      },
                      {
                        "hexValue": "546f6b656e732073686f756c642068617665206e6f6e2d7a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3016:34:11",
                        "type": "",
                        "value": "Tokens should have non-zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2993:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3072:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3080:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3068:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3068:15:11"
                      },
                      {
                        "hexValue": "6573736573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3085:7:11",
                        "type": "",
                        "value": "esses"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3061:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3061:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3061:32:11"
                }
              ]
            },
            "name": "store_literal_in_memory_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2974:6:11",
                "type": ""
              }
            ],
            "src": "2876:224:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3262:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3328:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3333:2:11",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3269:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3269:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3262:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3434:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097",
                      "nodeType": "YulIdentifier",
                      "src": "3345:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3345:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3447:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3458:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3463:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3454:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3447:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3240:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3248:3:11",
                "type": ""
              }
            ],
            "src": "3106:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3649:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3659:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3671:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3682:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3667:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3667:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3659:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3706:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3717:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3702:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3702:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3725:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3731:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3721:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3721:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3695:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3695:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3695:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3751:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3885:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3759:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3751:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3629:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3644:4:11",
                "type": ""
              }
            ],
            "src": "3478:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4009:117:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4031:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4039:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4027:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4027:14:11"
                      },
                      {
                        "hexValue": "5061697220616c72656164792065786973747320666f7220746865736520746f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4043:34:11",
                        "type": "",
                        "value": "Pair already exists for these to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4020:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4020:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4020:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4099:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4107:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4095:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4095:15:11"
                      },
                      {
                        "hexValue": "6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4112:6:11",
                        "type": "",
                        "value": "kens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4088:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4088:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4088:31:11"
                }
              ]
            },
            "name": "store_literal_in_memory_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4001:6:11",
                "type": ""
              }
            ],
            "src": "3903:223:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4278:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4288:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4354:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4359:2:11",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4295:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4288:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4460:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807",
                      "nodeType": "YulIdentifier",
                      "src": "4371:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4371:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4371:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4473:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4484:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4480:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4473:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4266:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4274:3:11",
                "type": ""
              }
            ],
            "src": "4132:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4675:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4685:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4697:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4708:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4693:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4693:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4685:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4732:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4743:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4728:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4728:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4751:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4757:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4747:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4747:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4721:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4721:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4777:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4911:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4785:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4785:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4777:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4655:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4670:4:11",
                "type": ""
              }
            ],
            "src": "4504:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5055:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5065:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5077:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5088:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5073:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5065:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5145:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5158:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5169:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5154:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5154:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5101:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5101:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5101:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5226:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5239:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5250:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5235:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5235:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5182:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5182:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5182:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5019:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5031:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5039:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5050:4:11",
                "type": ""
              }
            ],
            "src": "4929:332:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens should have different add\")\n\n        mstore(add(memPtr, 32), \"resses\")\n\n    }\n\n    function abi_encode_t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens should have non-zero addr\")\n\n        mstore(add(memPtr, 32), \"esses\")\n\n    }\n\n    function abi_encode_t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pair already exists for these to\")\n\n        mstore(add(memPtr, 32), \"kens\")\n\n    }\n\n    function abi_encode_t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "80:861:6:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "80:861:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;187:60;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;252:687;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;187:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;252:687::-;320:19;361:6;351:16;;:6;:16;;;347:85;;377:48;;;;;;;;;;:::i;:::-;;;;;;;;347:85;460:1;442:20;;:6;:20;;;:44;;;;484:1;466:20;;:6;:20;;;442:44;438:112;;;496:47;;;;;;;;;;:::i;:::-;;;;;;;;438:112;597:1;564:35;;:5;:13;570:6;564:13;;;;;;;;;;;;;;;:21;578:6;564:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;:74;;;;636:1;603:35;;:5;:13;609:6;603:13;;;;;;;;;;;;;;;:21;617:6;603:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;564:74;560:141;;;648:46;;;;;;;;;;:::i;:::-;;;;;;;;560:141;707:9;719:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;707:22;;735:4;:15;;;751:6;759;735:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:4;773:27;;830:11;806:5;:13;812:6;806:13;;;;;;;;;;;;;;;:21;820:6;806:21;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;871:11;847:5;:13;853:6;847:13;;;;;;;;;;;;;;;:21;861:6;847:21;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;914:6;894:40;;906:6;894:40;;;922:11;894:40;;;;;;:::i;:::-;;;;;;;;341:598;252:687;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:118::-;1408:24;1426:5;1408:24;:::i;:::-;1403:3;1396:37;1321:118;;:::o;1445:222::-;1538:4;1576:2;1565:9;1561:18;1553:26;;1589:71;1657:1;1646:9;1642:17;1633:6;1589:71;:::i;:::-;1445:222;;;;:::o;1673:169::-;1757:11;1791:6;1786:3;1779:19;1831:4;1826:3;1822:14;1807:29;;1673:169;;;;:::o;1848:225::-;1988:34;1984:1;1976:6;1972:14;1965:58;2057:8;2052:2;2044:6;2040:15;2033:33;1848:225;:::o;2079:366::-;2221:3;2242:67;2306:2;2301:3;2242:67;:::i;:::-;2235:74;;2318:93;2407:3;2318:93;:::i;:::-;2436:2;2431:3;2427:12;2420:19;;2079:366;;;:::o;2451:419::-;2617:4;2655:2;2644:9;2640:18;2632:26;;2704:9;2698:4;2694:20;2690:1;2679:9;2675:17;2668:47;2732:131;2858:4;2732:131;:::i;:::-;2724:139;;2451:419;;;:::o;2876:224::-;3016:34;3012:1;3004:6;3000:14;2993:58;3085:7;3080:2;3072:6;3068:15;3061:32;2876:224;:::o;3106:366::-;3248:3;3269:67;3333:2;3328:3;3269:67;:::i;:::-;3262:74;;3345:93;3434:3;3345:93;:::i;:::-;3463:2;3458:3;3454:12;3447:19;;3106:366;;;:::o;3478:419::-;3644:4;3682:2;3671:9;3667:18;3659:26;;3731:9;3725:4;3721:20;3717:1;3706:9;3702:17;3695:47;3759:131;3885:4;3759:131;:::i;:::-;3751:139;;3478:419;;;:::o;3903:223::-;4043:34;4039:1;4031:6;4027:14;4020:58;4112:6;4107:2;4099:6;4095:15;4088:31;3903:223;:::o;4132:366::-;4274:3;4295:67;4359:2;4354:3;4295:67;:::i;:::-;4288:74;;4371:93;4460:3;4371:93;:::i;:::-;4489:2;4484:3;4480:12;4473:19;;4132:366;;;:::o;4504:419::-;4670:4;4708:2;4697:9;4693:18;4685:26;;4757:9;4751:4;4747:20;4743:1;4732:9;4728:17;4721:47;4785:131;4911:4;4785:131;:::i;:::-;4777:139;;4504:419;;;:::o;4929:332::-;5050:4;5088:2;5077:9;5073:18;5065:26;;5101:71;5169:1;5158:9;5154:17;5145:6;5101:71;:::i;:::-;5182:72;5250:2;5239:9;5235:18;5226:6;5182:72;:::i;:::-;4929:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.15;\n\nimport \"./Pair.sol\";\n\ncontract Factory {\n  event PairCreated(address indexed token0, address indexed token1, address pair);\n  \n  mapping(address => mapping(address => address)) public pairs;\n\n  function createPair(address token0, address token1) public returns (address pairAddress) {\n    if (token0 == token1) {\n      revert('Tokens should have different addresses');\n    }\n\n    if (token0 == address(0) || token1 == address(0)) {\n      revert('Tokens should have non-zero addresses');\n    }\n    \n    if (pairs[token0][token1] != address(0) || pairs[token1][token0] != address(0)) {\n      revert('Pair already exists for these tokens');\n    }\n\n    Pair pair = new Pair();\n    pair.initialize(token0, token1);\n\n    pairAddress = address(pair);\n    pairs[token0][token1] = pairAddress;\n    pairs[token1][token0] = pairAddress;\n\n    emit PairCreated(token0, token1, pairAddress);\n  }\n}",
  "sourcePath": "/Users/lambros/Downloads/my-crypto-exchange/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        710
      ],
      "ERC20": [
        585
      ],
      "Factory": [
        1372
      ],
      "IERC20": [
        663
      ],
      "IERC20Metadata": [
        688
      ],
      "Math": [
        1214
      ],
      "Pair": [
        2425
      ]
    },
    "id": 1373,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1247,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:6"
      },
      {
        "absolutePath": "project:/contracts/Pair.sol",
        "file": "./Pair.sol",
        "id": 1248,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 2426,
        "src": "58:20:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          2425
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1372,
        "linearizedBaseContracts": [
          1372
        ],
        "name": "Factory",
        "nameLocation": "89:7:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "a92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c94",
            "id": 1256,
            "name": "PairCreated",
            "nameLocation": "107:11:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "135:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1256,
                  "src": "119:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "119:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1252,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "159:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1256,
                  "src": "143:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "175:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1256,
                  "src": "167:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "118:62:6"
            },
            "src": "101:80:6"
          },
          {
            "constant": false,
            "functionSelector": "69454b86",
            "id": 1262,
            "mutability": "mutable",
            "name": "pairs",
            "nameLocation": "242:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "187:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1261,
              "keyType": {
                "id": 1257,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "195:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "187:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1260,
                "keyType": {
                  "id": 1258,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "214:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "206:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1259,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "225:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1370,
              "nodeType": "Block",
              "src": "341:598:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1271,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "351:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1272,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "361:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "351:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1279,
                  "nodeType": "IfStatement",
                  "src": "347:85:6",
                  "trueBody": {
                    "id": 1278,
                    "nodeType": "Block",
                    "src": "369:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "546f6b656e732073686f756c64206861766520646966666572656e7420616464726573736573",
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "384:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6",
                                "typeString": "literal_string \"Tokens should have different addresses\""
                              },
                              "value": "Tokens should have different addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_300084c0d69158fb8bfd3110a1e04598738349d8c68879dfa1b78961ac24fbd6",
                                "typeString": "literal_string \"Tokens should have different addresses\""
                              }
                            ],
                            "id": 1274,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "377:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "377:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "377:48:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1280,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "442:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "460:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "452:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "452:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "452:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "442:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1286,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "466:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "484:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "476:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "476:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "476:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "466:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "442:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1298,
                  "nodeType": "IfStatement",
                  "src": "438:112:6",
                  "trueBody": {
                    "id": 1297,
                    "nodeType": "Block",
                    "src": "488:62:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "546f6b656e732073686f756c642068617665206e6f6e2d7a65726f20616464726573736573",
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "503:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097",
                                "typeString": "literal_string \"Tokens should have non-zero addresses\""
                              },
                              "value": "Tokens should have non-zero addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_cccc8a4eb507f42f3c1b30d29b924d0b81169046bec9a91d42a1cbb4cc07a097",
                                "typeString": "literal_string \"Tokens should have non-zero addresses\""
                              }
                            ],
                            "id": 1293,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "496:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "496:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1296,
                        "nodeType": "ExpressionStatement",
                        "src": "496:47:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1299,
                            "name": "pairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "564:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                              "typeString": "mapping(address => mapping(address => address))"
                            }
                          },
                          "id": 1301,
                          "indexExpression": {
                            "id": 1300,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "570:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "564:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 1303,
                        "indexExpression": {
                          "id": 1302,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "578:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "564:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "597:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "589:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "589:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "589:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "564:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1309,
                            "name": "pairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "603:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                              "typeString": "mapping(address => mapping(address => address))"
                            }
                          },
                          "id": 1311,
                          "indexExpression": {
                            "id": 1310,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "609:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "603:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 1313,
                        "indexExpression": {
                          "id": 1312,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "617:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "603:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "636:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "628:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "628:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "628:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "603:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "564:74:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1325,
                  "nodeType": "IfStatement",
                  "src": "560:141:6",
                  "trueBody": {
                    "id": 1324,
                    "nodeType": "Block",
                    "src": "640:61:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5061697220616c72656164792065786973747320666f7220746865736520746f6b656e73",
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "655:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807",
                                "typeString": "literal_string \"Pair already exists for these tokens\""
                              },
                              "value": "Pair already exists for these tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_24d24c8b99370e3ed8cee66bf06f4e4575ddd062f3de34eaefb2ab19dc1e7807",
                                "typeString": "literal_string \"Pair already exists for these tokens\""
                              }
                            ],
                            "id": 1320,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "648:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "648:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1323,
                        "nodeType": "ExpressionStatement",
                        "src": "648:46:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1328,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "712:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1370,
                      "src": "707:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pair_$2425",
                        "typeString": "contract Pair"
                      },
                      "typeName": {
                        "id": 1327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1326,
                          "name": "Pair",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2425,
                          "src": "707:4:6"
                        },
                        "referencedDeclaration": 2425,
                        "src": "707:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$2425",
                          "typeString": "contract Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1333,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "719:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Pair_$2425_$",
                        "typeString": "function () returns (contract Pair)"
                      },
                      "typeName": {
                        "id": 1330,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1329,
                          "name": "Pair",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2425,
                          "src": "723:4:6"
                        },
                        "referencedDeclaration": 2425,
                        "src": "723:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$2425",
                          "typeString": "contract Pair"
                        }
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:10:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pair_$2425",
                      "typeString": "contract Pair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "707:22:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1337,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "751:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1338,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "759:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1334,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1328,
                        "src": "735:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$2425",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2003,
                      "src": "735:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "735:31:6"
                },
                {
                  "expression": {
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1341,
                      "name": "pairAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "773:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1344,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1328,
                          "src": "795:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pair_$2425",
                            "typeString": "contract Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Pair_$2425",
                            "typeString": "contract Pair"
                          }
                        ],
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "787:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "787:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "773:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1347,
                  "nodeType": "ExpressionStatement",
                  "src": "773:27:6"
                },
                {
                  "expression": {
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1348,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1262,
                          "src": "806:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1351,
                        "indexExpression": {
                          "id": 1349,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "812:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "806:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1352,
                      "indexExpression": {
                        "id": 1350,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "820:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "806:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1353,
                      "name": "pairAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "830:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "806:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "806:35:6"
                },
                {
                  "expression": {
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1356,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1262,
                          "src": "847:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1359,
                        "indexExpression": {
                          "id": 1357,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "853:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "847:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1360,
                      "indexExpression": {
                        "id": 1358,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "861:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "847:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1361,
                      "name": "pairAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "871:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "847:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ExpressionStatement",
                  "src": "847:35:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1365,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "906:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1366,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "914:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1367,
                        "name": "pairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "922:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1364,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1256,
                      "src": "894:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1369,
                  "nodeType": "EmitStatement",
                  "src": "889:45:6"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "261:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "280:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "272:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "296:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "288:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "271:32:6"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "pairAddress",
                  "nameLocation": "328:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "320:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "319:21:6"
            },
            "scope": 1372,
            "src": "252:687:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1373,
        "src": "80:861:6",
        "usedErrors": []
      }
    ],
    "src": "32:909:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xE799c481668E9d88dCc90B85B56e1f16a0634f49",
      "transactionHash": "0xbd5f43bcad3d6b4661fe8b5f1cd7f83bf208e20e9e31de632f1e07695129d188"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-18T16:25:47.989Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}